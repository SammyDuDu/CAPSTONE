#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Utility script to preview the feedback text generated by vowel_v2.get_feedback().

Usage:
    python feedback_demo.py --summary ./batch_output_v2/summary_all.txt

The summary file should contain lines in the format produced by voweltest.py,
e.g. "label (romanized): f1=822.4, f2=1211.5, score=65.1, gender=Male".
"""

import argparse
import re
from pathlib import Path

from vowel_v2 import (
    get_feedback,
    STANDARD_MALE_FORMANTS,
    STANDARD_FEMALE_FORMANTS,
)


SUMMARY_LINE_RE = re.compile(
    r"^(?P<label>.+?) \((?P<vowel_key>.+?)\): "
    r"f1=(?P<f1>[\d.]+), f2=(?P<f2>[\d.]+), score=(?P<score>[\d.]+), gender=(?P<gender>\w+)$"
)


def parse_summary(summary_path: Path):
    """Yield parsed entries from the summary file."""
    for line in summary_path.read_text(encoding="utf-8").splitlines():
        m = SUMMARY_LINE_RE.match(line.strip())
        if not m:
            continue
        yield {
            "label": m.group("label"),
            "vowel_key": m.group("vowel_key"),
            "f1": float(m.group("f1")),
            "f2": float(m.group("f2")),
            "score": float(m.group("score")),
            "gender": m.group("gender"),
        }


def main():
    parser = argparse.ArgumentParser(description="Show feedback text for summary entries.")
    parser.add_argument(
        "--summary",
        type=Path,
        default=Path("./batch_output_v2/summary_all.txt"),
        help="Path to summary_all.txt produced by voweltest.py",
    )
    args = parser.parse_args()

    if not args.summary.exists():
        raise SystemExit(f"Summary file not found: {args.summary}")

    entries = list(parse_summary(args.summary))
    if not entries:
        raise SystemExit("No summary entries parsed. Is the file format correct?")

    print(f"Loaded {len(entries)} entries from {args.summary}")
    print()

    for entry in entries:
        ref_table = (
            STANDARD_MALE_FORMANTS if entry["gender"] == "Male" else STANDARD_FEMALE_FORMANTS
        )
        feedback = get_feedback(entry["vowel_key"], entry["f1"], entry["f2"], ref_table)
        print(f"[{entry['label']}]")
        print(f"  Input  : F1={entry['f1']:.1f}, F2={entry['f2']:.1f}, score={entry['score']:.1f}")
        print(f"  Gender : {entry['gender']}")
        print(f"  Feedback -> {feedback}")
        print()


if __name__ == "__main__":
    main()
